[{"C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\index.js":"1","C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\App.js":"2","C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\components\\AuthContext.js":"3","C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\components\\ProtectedRoute.js":"4","C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\components\\Signup\\Signup.js":"5","C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\components\\Login\\Login.js":"6","C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\components\\Homepage\\Homepage.js":"7","C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\components\\Dashboard\\Dashboard.js":"8","C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\components\\Navbar\\Navbar.js":"9","C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\components\\firebase.js":"10"},{"size":230,"mtime":1610441049680,"results":"11","hashOfConfig":"12"},{"size":1201,"mtime":1610550002911,"results":"13","hashOfConfig":"12"},{"size":1036,"mtime":1610550002912,"results":"14","hashOfConfig":"12"},{"size":277,"mtime":1610550002919,"results":"15","hashOfConfig":"12"},{"size":2764,"mtime":1610632439087,"results":"16","hashOfConfig":"12"},{"size":2113,"mtime":1610632439083,"results":"17","hashOfConfig":"12"},{"size":1983,"mtime":1610633224589,"results":"18","hashOfConfig":"12"},{"size":6297,"mtime":1610632439083,"results":"19","hashOfConfig":"12"},{"size":696,"mtime":1610615437926,"results":"20","hashOfConfig":"12"},{"size":513,"mtime":1610550002922,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1vuficu",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\index.js",[],["44","45"],"C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\App.js",[],"C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\components\\AuthContext.js",[],"C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\components\\Signup\\Signup.js",[],"C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\components\\Login\\Login.js",[],"C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\components\\Homepage\\Homepage.js",["46","47","48"],"C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\components\\Dashboard\\Dashboard.js",["49","50","51"],"import { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { useAuth } from \"../AuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport \"./Dashboard.css\";\r\n\r\nfunction Dashboard() {\r\n  const [topics, setTopics] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [docId, setDocId] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const { currentUser } = useAuth();\r\n  const userEmail = currentUser.email;\r\n  const userId = currentUser.uid;\r\n\r\n  function storeInDb(topics) {\r\n    db.collection(\"studydatedata\")\r\n      .add({\r\n        userId: userId,\r\n        email: userEmail,\r\n        topics: topics,\r\n      })\r\n      .then((doc) => {\r\n        console.log(doc);\r\n        setDocId(doc.id);\r\n        setIsEditing(false);\r\n      })\r\n      .catch((err) => {\r\n        setError(\"Error adding data to the database: \" + err);\r\n      });\r\n  }\r\n\r\n  function getDataFromDb() {\r\n    db.collection(\"studydatedata\")\r\n      .where(\"userId\", \"==\", userId)\r\n      .get()\r\n      .then((result) => {\r\n        result.forEach((val) => {\r\n          setTopics(val.data().topics);\r\n          setDocId(val.id);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setError(\"Error getting data from the database: \" + err);\r\n      });\r\n  }\r\n\r\n  function changeTopics(topics) {\r\n    db.collection(\"studydatedata\").doc(docId).update({\r\n      topics: topics,\r\n    });\r\n    setIsEditing(false);\r\n  }\r\n\r\n  function onSubmit(data) {\r\n    const topicsSelected = data.topic;\r\n    setTopics(topicsSelected);\r\n    if (docId !== \"\") changeTopics(topicsSelected);\r\n    else storeInDb(topicsSelected);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDataFromDb();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"heading\">WELCOME TO STUDY DATE</h1>\r\n      <h2>&nbsp;&nbsp;&nbsp;Your Email: {userEmail}</h2>\r\n      <div>\r\n        <h1 className=\"heading1\">&nbsp;&nbsp;List of Topics you have selected</h1>\r\n      </div>\r\n      {isEditing ? (\r\n        <>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"select\">\r\n              <label className=\"container\">\r\n                One\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"topic\"\r\n                  value=\"one\"\r\n                  ref={register}\r\n                />\r\n                <span className=\"checkmark\"></span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label className=\"container\">\r\n                Two\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"topic\"\r\n                  value=\"two\"\r\n                  ref={register}\r\n                />\r\n                <span className=\"checkmark\"></span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label className=\"container\">\r\n                Three\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"topic\"\r\n                  value=\"three\"\r\n                  ref={register}\r\n                />\r\n                <span className=\"checkmark\"></span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <label className=\"container\">\r\n                Four\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"topic\"\r\n                  value=\"four\"\r\n                  ref={register}\r\n                />\r\n                <span className=\"checkmark\"></span>\r\n              </label>\r\n            </div>\r\n            <div>\r\n              <button className=\"btn\" type=\"submit\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <ul>\r\n          {topics.map((topic) => {\r\n            return <li key={topic}>{topic}</li>;\r\n          })}\r\n        </ul>\r\n      )}\r\n      <button className=\"btn\" onClick={() => setIsEditing((value) => !value)}>\r\n        {isEditing ? \"Cancel\" : \"Edit\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\Arpit\\Desktop\\codejam-21\\flashy-fries\\src\\components\\firebase.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":44,"column":31,"nodeType":"58","endLine":44,"endColumn":47},{"ruleId":"56","severity":1,"message":"57","line":45,"column":32,"nodeType":"58","endLine":45,"endColumn":53},{"ruleId":"56","severity":1,"message":"57","line":46,"column":32,"nodeType":"58","endLine":46,"endColumn":47},{"ruleId":"59","severity":1,"message":"60","line":12,"column":10,"nodeType":"61","messageId":"62","endLine":12,"endColumn":15},{"ruleId":"59","severity":1,"message":"63","line":14,"column":35,"nodeType":"61","messageId":"62","endLine":14,"endColumn":41},{"ruleId":"64","severity":1,"message":"65","line":68,"column":6,"nodeType":"66","endLine":68,"endColumn":8,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDataFromDb'. Either include it or remove the dependency array.","ArrayExpression",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [getDataFromDb]",{"range":"73","text":"74"},[1763,1765],"[getDataFromDb]"]